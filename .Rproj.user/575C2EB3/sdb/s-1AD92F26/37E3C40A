{
    "contents" : "# \"getSupplyCurve\" \n\n#' Query SKM Exergy API.\n#'\n#' This function load data about supply curves from SKM Exergy (\\url{https://exergy.skmenergy.com/}) into a data.frame and plot it. You must be a SKM MP client for access to Exergy data.\n#'\n#' @param series_names Character vector with names of series. Example: c(\"CNPPLAN_RU1_H\",\"PROPLAN_RU1_H\",\"SPOT_RU1_H\")\n#' @param fromDate Start date as character (YYYY-MM-DD) or as date in R format. Examples:\"2014-21-08\" or \"as.Date(Sys.time())\"  \n#' @param toDate End date as character (YYYY-MM-DD) or as date in R format. Examples:\"2014-22-08\" or \"as.Date(Sys.time())+1\"  \n#' @param fromHour Start hour as character (\"HH\"). \"00\" by default for first hour of day.\n#' @param toHour End hour as character (\"HH\"). \"23\" by default for the last hour of day.\n#' @return Dataframe with data for series and time period.\n#' @examples \n#' \\dontrun{\n#' # Get data for the last week\n#' today<-as.Date(Sys.time())\n#' seriesList<-c(\"CNPPLAN_RU1_H\",\"PROPLAN_RU1_H\",\"SPOT_RU1_H\")\n#'\n#' dataSet<-getData(seriesList,today-6,today)\n#' dataSet}\n#' @export getSC\n\n# Current bid curve analysis\n\ngetSC<-function(hour,date=as.Date(Sys.time()),prizeZone=1,plotCurves=TRUE){\n  \n  # Test input\n  stopifnot(!is.null(hour))\n  \n  # Get data\n  if(prizeZone==1){prizeZoneStr<-\"RU1\"}else{prizeZoneStr<-\"RU2\"}\n  if(nchar(as.character(hour))==1){hourStr<-paste(0,as.character(hour),sep=\"\")}else{hourStr<-as.character(hour)}\n  yesterday<-date-1\n  weekAgo<-date-7\n  \n  ds<-data.frame(matrix(NA,300,9))\n  names(ds)<-c(\"bidToday\",\"bidVolumeToday\",\"bidCumVolumeToday\",\"bidYesterday\",\"bibVolumeYesterday\",\"bidCumVolumeYesterday\",\"bidWeekAgo\",\"bidVolumeWeekAgo\",\"bidCumVolumeWeekAgo\")\n  \n  for(bid in 1:300){\n    \n    bidStr<-bid\n    if(bid<10){bidStr<-paste(\"00\",bid,sep=\"\")}\n    if(bid>9 & bid<100){bidStr<-paste(\"0\",bid,sep=\"\")}\n    \n  hourDsToday<-getData(c(paste(\"SUPPLYPRICE\",bidStr,\"_\",prizeZoneStr,\"_H\",sep=\"\"),paste(\"SUPPLYVOL\",bidStr,\"_\",prizeZoneStr,\"_H\",sep=\"\")),date,date,fromHour=hourStr,toHour=hourStr)\n  ds[bid,1]<-hourDsToday[1,2]\n  ds[bid,2]<- hourDsToday[1,3]\n  \n  hourDsYesterday<-getData(c(paste(\"SUPPLYPRICE\",bidStr,\"_\",prizeZoneStr,\"_H\",sep=\"\"),paste(\"SUPPLYVOL\",bidStr,\"_\",prizeZoneStr,\"_H\",sep=\"\")),yesterday,yesterday,fromHour=hourStr,toHour=hourStr)\n  ds[bid,4]<-hourDsYesterday[1,2]\n  ds[bid,5]<- hourDsYesterday[1,3]\n\n  hourDsWeekAgo<-getData(c(paste(\"SUPPLYPRICE\",bidStr,\"_\",prizeZoneStr,\"_H\",sep=\"\"),paste(\"SUPPLYVOL\",bidStr,\"_\",prizeZoneStr,\"_H\",sep=\"\")),weekAgo,weekAgo,fromHour=hourStr,toHour=hourStr)\n  ds[bid,7]<-hourDsWeekAgo[1,2]\n  ds[bid,8]<-hourDsWeekAgo[1,3]\n  \n  }\n \n  # Add cumulative sum\n  ds[,3]<-cumsum(ds[,2])\n  ds[,6]<-cumsum(ds[,5])\n  ds[,9]<-cumsum(ds[,8])\n\n  # Plot\n  if(plotCurves==TRUE){\n    \n    par(mfrow=c(2,1)) \n    \n    plot(ds[2:300,1]~ds[2:300,3],xlim=c(min(ds[,3],na.rm=TRUE)-5000,max(ds[,3],na.rm=TRUE)+5000),type=\"l\",col=1,main=paste(date,\"Hour\",hour),lwd=2,xlab=\"MW\",ylab=\"RUR\")\n    lines(ds[2:300,4]~ds[2:300,6],col=4)\n    lines(ds[2:300,7]~ds[2:300,9],col=2)\n    #legend(\"topleft\", pch = 20, col = c(1, 4, 2), legend = c(\"Today\",\"Yesterday\", \"Week ago\")) \n    abline(h=1000,col=8,lty=3) \n    \n    plot(ds[2:300,1]~cumsum(ds[2:300,2]),xlim=c(min(ds[,2],na.rm=TRUE)-5000,max(cumsum(ds[2:300,2]),na.rm=TRUE)+5000),type=\"l\",col=1,main=paste(\"Only price part\",date,\"Hour\",hour),lwd=2,xlab=\"MW\",ylab=\"RUR\")\n    lines(ds[2:300,4]~cumsum(ds[2:300,5]),col=4)\n    lines(ds[2:300,7]~cumsum(ds[2:300,8]),col=2)\n    #legend(\"topleft\", pch = 20, col = c(1, 4, 2), legend = c(\"Today\",\"Yesterday\", \"Week ago\")) \n    abline(h=1000,col=8,lty=3) \n    \n  }\n\n  return(ds)\n\n}\n",
    "created" : 1408773925694.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "64|23|80|2|\n",
    "hash" : "287249680",
    "id" : "37E3C40A",
    "lastKnownWriteTime" : 1408781373,
    "path" : "C:/R/skmExergy/skmExergy/R/getSC.R",
    "project_path" : "R/getSC.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}